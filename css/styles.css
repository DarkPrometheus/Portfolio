@charset "UTF-8";
/** Screens **/
/* Computadora */
/* Tablet */
/* Telefono */
/* Configuracion basica para SASS */
/**
 * Mixin fullv.
 *
 * Establece el ancho y alto de un elemento al 100% del viewport.
 */
/**
 * Mixin full.
 *
 * Establece el ancho y alto de un elemento al 100% del contenedor padre.
 */
@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;700&display=swap");
/**
 * Mixin para estilos de entrada (input).
 *
 * Aplica estilos personalizados a los elementos de entrada.
 *
 * Argumentos:
 *   - $color: Color de fondo del elemento de entrada.
 */
/**
 * Mixin para estilos de botón.
 *
 * Aplica estilos personalizados a los elementos de botón.
 *
 * Argumentos:
 *   - $alto: Altura del botón.
 *   - $ancho: Ancho del botón.
 *   - $color: Color de fondo del botón.
 */
/**
 * Mixin para aplicar bordes redondeados en la parte superior.
 *
 * Aplica bordes redondeados en la esquina superior derecha e izquierda.
 *
 * Argumentos:
 *   - $size: Tamaño del radio de los bordes.
 */
/**
 * Mixin para aplicar bordes redondeados en la parte inferior.
 *
 * Aplica bordes redondeados en la esquina inferior derecha e izquierda.
 *
 * Argumentos:
 *   - $size: Tamaño del radio de los bordes.
 */
/**
 * Mixin para estilos personalizados de la barra de desplazamiento.
 *
 * Aplica estilos personalizados a la barra de desplazamiento en navegadores webkit.
 *
 * Argumentos:
 *   - $x: Valor de la propiedad overflow-x para controlar la visibilidad horizontal de la barra de desplazamiento.
 *   - $y: Valor de la propiedad overflow-y para controlar la visibilidad vertical de la barra de desplazamiento.
 *
 * Nota: Este mixin solo afecta a los navegadores webkit (Chrome, Safari, etc.).
 */
/**
 * Mixin para gradientes lineales.
 *
 * Genera un gradiente lineal entre dos colores.
 *
 * Argumentos:
 *   - $start-color: Color de inicio del gradiente.
 *   - $end-color: Color final del gradiente.
 */
/**
 * Mixin para sombra de texto.
 *
 * Aplica una sombra de texto personalizada a un elemento.
 *
 * Argumentos:
 *   - $color: Color de la sombra de texto.
 *   - $x-offset: Desplazamiento horizontal de la sombra.
 *   - $y-offset: Desplazamiento vertical de la sombra.
 *   - $blur: Desenfoque de la sombra.
 */
/**
 * Mixin para animaciones.
 *
 * Aplica una animación personalizada a un elemento.
 *
 * Argumentos:
 *   - $name: Nombre de la animación.
 *   - $duration: Duración de la animación.
 *   - $timing-function: Función de temporización de la animación.
 *   - $delay: Retraso antes de que comience la animación.
 *   - $iteration-count: Cantidad de veces que se repetirá la animación.
 *   - $direction: Dirección de la animación.
 */
/**
 * Mixin para sombra de caja.
 *
 * Aplica una sombra de caja personalizada a un elemento.
 *
 * Argumentos:
 *   - $x-offset: Desplazamiento horizontal de la sombra.
 *   - $y-offset: Desplazamiento vertical de la sombra.
 *   - $blur: Desenfoque de la sombra.
 *   - $spread: Extensión de la sombra.
 *   - $color: Color de la sombra.
 */
/**
 * Mixin para transiciones.
 *
 * Aplica una transición personalizada a las propiedades de un elemento.
 *
 * Argumentos:
 *   - $properties: Propiedades a las que se aplicará la transición.
 *   - $duration: Duración de la transición.
 *   - $timing-function: Función de temporización de la transición.
 *   - $delay: Retraso antes de que comience la transición.
 */
/**
 * Mixin flex.
 *
 * Aplica un contenedor flexible con dirección y alineación personalizadas.
 *
 * Argumentos:
 *   - $direction: Dirección del contenedor flexible (row, row-reverse, column, column-reverse).
 *   - $center: Opcional. Centra los elementos horizontal y verticalmente dentro del contenedor si se establece en 'center'.
 */
/**
 * Mixin grid.
 *
 * Establece un contenedor con sistema de grilla utilizando columnas del mismo tamaño.
 *
 * Argumentos:
 *   - $cols: Número de columnas en la grilla.
 *   - $size: Tamaño de cada columna.
 */
/**
 * Mixin pAbsolte.
 *
 * Establece la posición de un elemento como absoluta y lo sitúa en la esquina superior izquierda del contenedor padre.
 */
/**
 * Mixin centerAbsolute.
 *
 * Establece la posición de un elemento como absoluta y lo centra horizontalmente en el contenedor padre.
 */
/* Descontinuado */
/* Descontinuado */
@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;700&display=swap");
* {
  font-family: "Roboto", sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  color: whitesmoke;
  overflow-x: hidden;
  font-size: 10px;
  background-color: #0F172A;
}

/* Para React */
#root {
  height: 100vh;
}
#root .Routers {
  height: 100%;
  display: flex;
  flex-direction: column;
}

a {
  text-decoration: none;
  color: white;
}

.hide {
  display: none;
}

.displayBlock {
  display: block;
}

.displayFlex {
  display: Flex;
}

.cursor {
  width: 50rem;
  height: 50rem;
  background: radial-gradient(600px at 2542px 1058px, rgba(29, 78, 216, 0.15), transparent 80%);
  background: radial-gradient(600px, rgba(29, 78, 216, 0.1), transparent 80%);
  background: radial-gradient(circle, rgba(29, 78, 216, 0.15) 0%, transparent 60%);
  border-radius: 50%;
  position: fixed;
  pointer-events: none; /* Evita que el círculo interfiera con otros elementos */
  transform: translate(-50%, -50%);
}

/**
 * Mixin fullv.
 *
 * Establece el ancho y alto de un elemento al 100% del viewport.
 */
/**
 * Mixin full.
 *
 * Establece el ancho y alto de un elemento al 100% del contenedor padre.
 */
/**
 * Mixin para estilos de entrada (input).
 *
 * Aplica estilos personalizados a los elementos de entrada.
 *
 * Argumentos:
 *   - $color: Color de fondo del elemento de entrada.
 */
/**
 * Mixin para estilos de botón.
 *
 * Aplica estilos personalizados a los elementos de botón.
 *
 * Argumentos:
 *   - $alto: Altura del botón.
 *   - $ancho: Ancho del botón.
 *   - $color: Color de fondo del botón.
 */
/**
 * Mixin para aplicar bordes redondeados en la parte superior.
 *
 * Aplica bordes redondeados en la esquina superior derecha e izquierda.
 *
 * Argumentos:
 *   - $size: Tamaño del radio de los bordes.
 */
/**
 * Mixin para aplicar bordes redondeados en la parte inferior.
 *
 * Aplica bordes redondeados en la esquina inferior derecha e izquierda.
 *
 * Argumentos:
 *   - $size: Tamaño del radio de los bordes.
 */
/**
 * Mixin para estilos personalizados de la barra de desplazamiento.
 *
 * Aplica estilos personalizados a la barra de desplazamiento en navegadores webkit.
 *
 * Argumentos:
 *   - $x: Valor de la propiedad overflow-x para controlar la visibilidad horizontal de la barra de desplazamiento.
 *   - $y: Valor de la propiedad overflow-y para controlar la visibilidad vertical de la barra de desplazamiento.
 *
 * Nota: Este mixin solo afecta a los navegadores webkit (Chrome, Safari, etc.).
 */
/**
 * Mixin para gradientes lineales.
 *
 * Genera un gradiente lineal entre dos colores.
 *
 * Argumentos:
 *   - $start-color: Color de inicio del gradiente.
 *   - $end-color: Color final del gradiente.
 */
/**
 * Mixin para sombra de texto.
 *
 * Aplica una sombra de texto personalizada a un elemento.
 *
 * Argumentos:
 *   - $color: Color de la sombra de texto.
 *   - $x-offset: Desplazamiento horizontal de la sombra.
 *   - $y-offset: Desplazamiento vertical de la sombra.
 *   - $blur: Desenfoque de la sombra.
 */
/**
 * Mixin para animaciones.
 *
 * Aplica una animación personalizada a un elemento.
 *
 * Argumentos:
 *   - $name: Nombre de la animación.
 *   - $duration: Duración de la animación.
 *   - $timing-function: Función de temporización de la animación.
 *   - $delay: Retraso antes de que comience la animación.
 *   - $iteration-count: Cantidad de veces que se repetirá la animación.
 *   - $direction: Dirección de la animación.
 */
/**
 * Mixin para sombra de caja.
 *
 * Aplica una sombra de caja personalizada a un elemento.
 *
 * Argumentos:
 *   - $x-offset: Desplazamiento horizontal de la sombra.
 *   - $y-offset: Desplazamiento vertical de la sombra.
 *   - $blur: Desenfoque de la sombra.
 *   - $spread: Extensión de la sombra.
 *   - $color: Color de la sombra.
 */
/**
 * Mixin para transiciones.
 *
 * Aplica una transición personalizada a las propiedades de un elemento.
 *
 * Argumentos:
 *   - $properties: Propiedades a las que se aplicará la transición.
 *   - $duration: Duración de la transición.
 *   - $timing-function: Función de temporización de la transición.
 *   - $delay: Retraso antes de que comience la transición.
 */
/**
 * Mixin flex.
 *
 * Aplica un contenedor flexible con dirección y alineación personalizadas.
 *
 * Argumentos:
 *   - $direction: Dirección del contenedor flexible (row, row-reverse, column, column-reverse).
 *   - $center: Opcional. Centra los elementos horizontal y verticalmente dentro del contenedor si se establece en 'center'.
 */
/**
 * Mixin grid.
 *
 * Establece un contenedor con sistema de grilla utilizando columnas del mismo tamaño.
 *
 * Argumentos:
 *   - $cols: Número de columnas en la grilla.
 *   - $size: Tamaño de cada columna.
 */
/**
 * Mixin pAbsolte.
 *
 * Establece la posición de un elemento como absoluta y lo sitúa en la esquina superior izquierda del contenedor padre.
 */
/**
 * Mixin centerAbsolute.
 *
 * Establece la posición de un elemento como absoluta y lo centra horizontalmente en el contenedor padre.
 */
/* Descontinuado */
/* Descontinuado */
.Home {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.Home h1 {
  font-size: 4rem;
  font-family: "Ubuntu", sans-serif;
}
.Home h2 {
  margin: 1.5rem 0;
  font-size: 1.5rem;
  font-family: "Ubuntu", sans-serif;
}
.Home .Links {
  display: flex;
  justify-content: space-evenly;
  width: 15rem;
}
.Home .Links a {
  padding: 0.5rem;
}
.Home .Links a img {
  width: 3rem;
}
.Home .Links a:hover {
  transition: background-color 0.3s ease;
  border-radius: 0.5rem;
  background-color: rgba(128, 128, 128, 0.164);
}

@media screen and (max-width: 767px) {
  .Home h1 {
    font-size: 2.7rem;
  }
}
.Content {
  width: 100vw;
  display: flex;
  justify-content: center;
  flex-direction: row;
}
.Content .Rigth {
  width: 500px;
  padding: 4rem;
}
.Content .Rigth h3 {
  font-size: 1.8rem;
}
.Content .Rigth h4 {
  font-size: 1.4rem;
  color: rgb(100, 116, 139);
  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
}
.Content .Rigth p {
  margin: 0.8rem 0;
  font-size: 1.1rem;
  color: #8290A6;
  font-family: "Ubuntu", sans-serif;
}
.Content .Left {
  width: 42rem;
  padding: 4rem;
}
.Content .Left .Exp .Element {
  padding: 1.5rem;
  display: grid;
  grid-template-columns: 32% 68%;
  transition: background-color 0.3s;
  position: relative;
  overflow: hidden;
}
.Content .Left .Exp .Element .dates {
  font-family: "Ubuntu", sans-serif;
  font-size: 0.9rem;
  color: rgb(100, 116, 139);
}
.Content .Left .Exp .Element .content {
  display: flex;
  flex-direction: column;
}
.Content .Left .Exp .Element .content .Position {
  font-size: 1.2rem;
  font-weight: 500;
}
.Content .Left .Exp .Element .content .Company {
  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
  font-size: 1.1rem;
  color: rgb(100, 116, 139);
  margin-bottom: 0.5rem;
  margin-top: 0.2rem;
}
.Content .Left .Exp .Element .content p {
  font-size: 1rem;
  font-family: "Ubuntu", sans-serif;
  color: #8290A6;
}
.Content .Left .Exp .Element .content .Technologies {
  display: flex;
  padding: 1rem 0;
  flex-wrap: wrap;
}
.Content .Left .Exp .Element .content .Technologies .Technology {
  margin: 0.3rem 0.5rem 0.3rem 0;
  padding: 0.5rem 1rem;
  border-radius: 2rem;
  font-size: 1rem;
  background-color: #112B3A;
  color: rgb(94, 234, 212);
}
.Content .Left .Exp .Element .content .Technologies .Technology:hover {
  cursor: pointer;
  background-color: #173a4e;
}
.Content .Left .Exp .Element::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: inherit;
  z-index: -1;
  transform: scale(0);
  transition: transform 0.3s, opacity 0.3s;
}
.Content .Left .Exp .Element:hover {
  cursor: pointer;
  transition: background-color 0.3s ease;
  background-color: rgba(128, 128, 128, 0.151);
  border-radius: 0.5rem;
}
.Content .Left .Exp .Element:hover::before {
  transform: scale(1);
  opacity: 0;
  transition: transform 0.3s, opacity 0.3s;
}

@media screen and (max-width: 1200px) {
  .Content .Rigth {
    padding: 4rem 2rem;
  }
  .Content .Left {
    padding: 4rem 2rem;
  }
  .Content .Left .Exp .Element .content .Technologies .Technology {
    font-size: 0.8rem;
  }
  .Content .Left .Exp .Element:hover {
    background-color: transparent;
  }
}
@media screen and (max-width: 991px) {
  .Content .Rigth {
    padding: 4rem 2rem;
  }
  .Content .Left {
    padding: 4rem 1rem;
  }
  .Content .Left .Exp .Element .content .Technologies .Technology {
    font-size: 0.8rem;
  }
}
@media screen and (max-width: 767px) {
  .Content {
    flex-direction: column;
  }
  .Content .Rigth {
    width: auto;
  }
  .Content .Left {
    padding: 4rem 1rem;
    width: auto;
  }
  .Content .Left .Exp .Element .content .Technologies .Technology {
    font-size: 1rem;
  }
}
@media screen and (max-width: 520px) {
  .Content .Rigth {
    width: auto;
  }
  .Content .Left {
    padding: 4rem 1rem;
    width: auto;
  }
  .Content .Left .Exp .Element {
    display: flex;
    flex-direction: column;
  }
  .Content .Left .Exp .Element .content .Technologies .Technology {
    font-size: 1rem;
  }
}/*# sourceMappingURL=styles.css.map */